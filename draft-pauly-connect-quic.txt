



Network Working Group                                           T. Pauly
Internet-Draft                                                Apple Inc.
Intended status: Experimental                                1 July 2020
Expires: 2 January 2021


                       Proxying QUIC using HTTP/3
                    draft-pauly-connect-quic-latest

Abstract

   This document defines a technique for proxying QUIC connections using
   an HTTP/3 proxy.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Source for this draft and an issue tracker can be found at
   https://github.com/tfpauly/quic-proxy (https://github.com/tfpauly/
   quic-proxy).

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 2 January 2021.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights



Pauly                    Expires 2 January 2021                 [Page 1]

Internet-Draft                QUIC Proxying                    July 2020


   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Conventions and Definitions . . . . . . . . . . . . . . .   2
   2.  Proxying using QUIC Connection IDs  . . . . . . . . . . . . .   3
   3.  The CONNECT-QUIC Method . . . . . . . . . . . . . . . . . . .   3
     3.1.  CONNECT-QUIC Headers  . . . . . . . . . . . . . . . . . .   3
     3.2.  Client Request Behavior . . . . . . . . . . . . . . . . .   4
     3.3.  Proxy Response Behavior . . . . . . . . . . . . . . . . .   5
     3.4.  Connection ID Mapping Lifetime  . . . . . . . . . . . . .   5
   4.  Example . . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
     6.1.  HTTP Method . . . . . . . . . . . . . . . . . . . . . . .   7
     6.2.  HTTP Headers  . . . . . . . . . . . . . . . . . . . . . .   7
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   8
     7.2.  Informative References  . . . . . . . . . . . . . . . . .   9
   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .   9
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Introduction

   This document defines a technique for proxying QUIC connections
   [I-D.ietf-quic-transport] using an HTTP/3 [I-D.ietf-quic-http] proxy.

   Specifically, this document defines the CONNECT-QUIC HTTP method to
   support QUIC as a proxied protocol.

1.1.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.










Pauly                    Expires 2 January 2021                 [Page 2]

Internet-Draft                QUIC Proxying                    July 2020


2.  Proxying using QUIC Connection IDs

   The method described in this document proxies flows at the
   granularity of QUIC Connection IDs, which are exposed in QUIC packets
   and can be used for identifying and routing the packets.  Each QUIC
   Connection ID represents one direction of QUIC packets, with the
   Connection ID being owned and defined by the receiver of the packets.

   A Connection ID that is defined by the client of HTTP/3 proxy, and is
   used to route packets from the server to the client when it is a
   Destination Connection ID, is referred to as the "Client Connection
   ID".

   A Connection ID that is defined by the server accessed via an HTTP/3
   proxy, and is used to route packets from the client to the server
   when it is a Destination Connection ID, is referred to as the "Server
   Connection ID".

   QUIC packets can be either tunnelled within an HTTP/3 proxy
   connection using QUIC DATAGRAM frames, or be forwarded directly
   alongside an HTTP/3 proxy connection on the same set of IP addresses
   and UDP ports.

3.  The CONNECT-QUIC Method

   The CONNECT-QUIC method establishes a proxy forwarding path for a
   particular flow of datagrams associated with a QUIC Connection ID.

   CONNECT-QUIC requests follow the same header requirements as CONNECT
   requests, as defined in Section 8.3 of [RFC7540].  Notably, the
   request MUST include the :authority psuedo-header field containing
   the host and port to which to connect.

   Body payloads within CONNECT-QUIC requests are undefined, and SHOULD
   be treated as malformed.

   CONNECT-QUIC responses are not cacheable.

   The CONNECT-QUIC method as defined in this document can only be
   supported by an HTTP/3 proxy.  Use of CONNECT-QUIC with older HTTP
   versions is undefined and MUST be rejected.

3.1.  CONNECT-QUIC Headers

   CONNECT-QUIC requests and responses include headers that describe how
   the proxy routes QUIC packets matching a given Connection ID.





Pauly                    Expires 2 January 2021                 [Page 3]

Internet-Draft                QUIC Proxying                    July 2020


   The "Client-Connection-Id" header is a Byte Sequence Structured Field
   [I-D.ietf-httpbis-header-structure] containing a client's QUIC
   Connection ID.  The byte sequence MAY be zero-length.  The ABNF is:

      Client-Connection-Id = sf-binary

   The "Server-Connection-Id" header is a Byte Sequence Structured Field
   [I-D.ietf-httpbis-header-structure] containing a server's QUIC
   Connection ID.  The byte sequence MAY be zero-length.  The ABNF is:

      Server-Connection-Id = sf-binary

   The "Datagram-Flow-ID" header is an Integer Structured Field
   [I-D.ietf-httpbis-header-structure] containing the QUIC datagram flow
   ID to use for tunnelling packets [I-D.schinazi-quic-h3-datagram]
   [I-D.ietf-quic-datagram].  The ABNF is:

     Datagram-Flow-Id = sf-integer

3.2.  Client Request Behavior

   Whenever a client wants to send QUIC packets through the proxy, or
   receive QUIC packets via the proxy, it sends a new CONNECT-QUIC
   request.

   Clients can choose to send QUIC packets to the proxy either tunnelled
   within DATAGRAM frames, or sent directly to the proxy's IP address
   and port.

   Each request MUST contain exactly one connection ID header, either
   Client-Connection-Id or Server-Connection-Id.  Client-Connection-Id
   requests define paths for receiving packets from the server to the
   client, and Server-Connection-Id requests define paths for sending
   packets from the client to server.

   Packets tunnelled within DATAGRAM frames can be sent as soon as the
   CONNECT-QUIC request has been sent, even in the same QUIC packet to
   the proxy.  That is, the QUIC packet sent from the client to the
   proxy can contain a STREAM frame with the CONNECT-QUIC request, as
   well as a DATAGRAM frame that contains a tunnelled QUIC packet to
   forward.  This is particularly useful for reducing round trips.

   Packets forwarded by sending directly to the proxy's IP address and
   port MUST wait for a successful response to the CONNECT-QUIC request.
   This ensures that the proxy knows how to forward a given packet.






Pauly                    Expires 2 January 2021                 [Page 4]

Internet-Draft                QUIC Proxying                    July 2020


   Clients sending QUIC Long Header packets SHOULD tunnel them within
   DATAGRAM frames to avoid exposing unnecessary connection metadata.
   QUIC Short Header packets, on the other hand, can send directly to
   the proxy (without any tunnelling or encapsulation) once the proxy
   has sent a successful response for the Server Connection ID.

3.3.  Proxy Response Behavior

   Upon receipt of a CONNECT-QUIC request, the proxy attempts to
   establish a forwarding path, and validates that it has no overlapping
   mappings.  This includes:

   *  Validating that the request include one of either the Client-
      Connection-Id and the Server-Connection-Id header, along with a
      Datagram-Flow-Id header.

   *  Creating a mapping entry for the QUIC Connection ID in the given
      direction (client or server) associated with the client's IP
      address and UDP port.  For any non-zero-length Client Connection
      ID, the Connection ID MUST be unique across all other clients.

   *  Allocating a UDP socket on which to communicate with the requested
      server.

   If these operations can be completed the proxy sends a 2xx
   (Successful) response.  This response MUST also echo any Client-
   Connection-Id, Server-Connection-Id, and Datagram-Flow-Id headers
   included in the request.

   At this point, any DATAGRAM frames sent by the client matching a
   known Server Connection ID will be forwarded on the correct UDP
   socket.  Any packets recieved directly to the proxy from the client
   that match a known Server Connection ID will be forwarded similarly.

   Any packets received by the proxy from a server that match a known
   Client Connection ID on a matching UDP socket need to be forwarded to
   the client.  The proxy MUST use DATAGRAM frames on the associated
   flow ID for any Long Header packets.  The proxy SHOULD forward
   directly to the client for any matching Short Header packets.

3.4.  Connection ID Mapping Lifetime

   Each CONNECT-QUIC request consumes one bidirectional HTTP/3 stream.
   For any stream on which the proxy has sent a response indicating
   success, the mapping for forwarding a Connection ID lasts as long as
   the stream is open.





Pauly                    Expires 2 January 2021                 [Page 5]

Internet-Draft                QUIC Proxying                    July 2020


   A client that no longer wants a given Connection ID to be forwarded
   by the proxy, for either direction, MUST reset the stream.

   If the proxy encounters an error upon sending a forwarded packet,
   such as an ICMP error, it SHOULD send a H3_CONNECT_ERROR stream error
   [I-D.ietf-quic-http].

4.  Example

   Consider a client that is establishing a new QUIC connection through
   the proxy.  It has selected a Client Connection ID of 0x31323334.  It
   selects the next open datagram flow ID (1).  In order to inform a
   proxy of the new QUIC Client Connection ID, and bind that connection
   ID to datagram flow 1, the client sends the following CONNECT-
   DATAGRAM request:

   HEADERS + END_HEADERS
   :method = CONNECT-QUIC
   :authority = target.example.com:443
   client-connection-id = :MTIzNA==:
   datagram-flow-id = 1

   The client will also send the initial QUIC packet with the Long
   Header form in a DATAGRAM frame with flow ID 1.

   Once the proxy sends a 200 response indicating success, packets
   received by the proxy that match the Connection ID 0x31323334 will be
   directly forwarded to the client.  The proxy will also forward the
   initial QUIC packet received on DATAGRAM flow 1 to
   target.example.com:443.

   When the proxy receives a response from target.example.com:443 that
   has 0x31323334 as the Destination Connection ID, the proxy will
   forward that packet to the client on DATAGRAM flow 1.

   Once the client learns which Connection ID has been selected by the
   server, it can send a new request to the proxy to establish a
   mapping.  In this case, that ID is 0x61626364.  The client sends the
   following request:

   HEADERS + END_HEADERS
   :method = CONNECT-QUIC
   :authority = target.example.com:443
   client-connection-id = :YWJjZA==:
   datagram-flow-id = 1

   The client also sends its reply to the server in a DATAGRAM frame on
   flow 1 after sending the new request.



Pauly                    Expires 2 January 2021                 [Page 6]

Internet-Draft                QUIC Proxying                    July 2020


   Once the proxy sends a 200 response indicating success, packets sent
   by the client that match the Connection ID 0x61626364 will be
   forwarded to the server.

   Upon receiving the response, the client starts sending Short Header
   packets with a Destination Connection ID of 0x61626364 directly to
   the proxy (not tunnelled), and these are forwarded directly to the
   server by the proxy.  Similarly, Short Header packets from the server
   with a Destination Connection ID of 0x31323334 are forwarded directly
   to the client.

5.  Security Considerations

   Proxies that support CONNECT-QUIC SHOULD provide protections to rate-
   limit or restrict clients from opening an excessive number of proxied
   connections, so as to limit abuse or use of proxies to launch Denial-
   of-Service attacks.

   Sending QUIC packets by forwarding through a proxy without tunnelling
   exposes some QUIC header metadata to onlookers, and can be used to
   correlate packets flows if an attacker is able to see traffic on both
   sides of the proxy.

6.  IANA Considerations

6.1.  HTTP Method

   This document registers "CONNECT-QUIC" in the HTTP Method Registry
   <https://www.iana.org/assignments/http-methods>.

     +--------------+------+------------+---------------+
     | Method Name  | Safe | Idempotent |   Reference   |
     +--------------+------+------------+---------------+
     | CONNECT-QUIC |  no  |     no     | This document |
     +--------------+------+------------+---------------+

6.2.  HTTP Headers

   This document registers the "Client-Connection-Id", "Server-
   Connection-Id", and "Datagram-Flow-Id" headers in the "Permanent
   Message Header Field Names" <https://www.iana.org/assignments/
   message-headers>.









Pauly                    Expires 2 January 2021                 [Page 7]

Internet-Draft                QUIC Proxying                    July 2020


     +----------------------+----------+--------+---------------+
     | Header Field Name    | Protocol | Status |   Reference   |
     +----------------------+----------+--------+---------------+
     | Client-Connection-Id |   http   |  exp   | This document |
     +----------------------+----------+--------+---------------+
     | Server-Connection-Id |   http   |  exp   | This document |
     +----------------------+----------+--------+---------------+
     | Datagram-Flow-Id     |   http   |  exp   | This document |
     +----------------------+----------+--------+---------------+

7.  References

7.1.  Normative References

   [I-D.ietf-httpbis-header-structure]
              Nottingham, M. and P. Kamp, "Structured Field Values for
              HTTP", Work in Progress, Internet-Draft, draft-ietf-
              httpbis-header-structure-19, 3 June 2020,
              <http://www.ietf.org/internet-drafts/draft-ietf-httpbis-
              header-structure-19.txt>.

   [I-D.ietf-quic-datagram]
              Pauly, T., Kinnear, E., and D. Schinazi, "An Unreliable
              Datagram Extension to QUIC", Work in Progress, Internet-
              Draft, draft-ietf-quic-datagram-00, 26 February 2020,
              <http://www.ietf.org/internet-drafts/draft-ietf-quic-
              datagram-00.txt>.

   [I-D.ietf-quic-http]
              Bishop, M., "Hypertext Transfer Protocol Version 3
              (HTTP/3)", Work in Progress, Internet-Draft, draft-ietf-
              quic-http-29, 9 June 2020, <http://www.ietf.org/internet-
              drafts/draft-ietf-quic-http-29.txt>.

   [I-D.ietf-quic-transport]
              Iyengar, J. and M. Thomson, "QUIC: A UDP-Based Multiplexed
              and Secure Transport", Work in Progress, Internet-Draft,
              draft-ietf-quic-transport-29, 9 June 2020,
              <http://www.ietf.org/internet-drafts/draft-ietf-quic-
              transport-29.txt>.

   [I-D.schinazi-quic-h3-datagram]
              Schinazi, D., "Using QUIC Datagrams with HTTP/3", Work in
              Progress, Internet-Draft, draft-schinazi-quic-h3-datagram-
              04, 16 April 2020, <http://www.ietf.org/internet-drafts/
              draft-schinazi-quic-h3-datagram-04.txt>.





Pauly                    Expires 2 January 2021                 [Page 8]

Internet-Draft                QUIC Proxying                    July 2020


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., "Hypertext
              Transfer Protocol Version 2 (HTTP/2)", RFC 7540,
              DOI 10.17487/RFC7540, May 2015,
              <https://www.rfc-editor.org/info/rfc7540>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

7.2.  Informative References

   [I-D.schinazi-masque-connect-udp]
              Schinazi, D., "The CONNECT-UDP HTTP Method", Work in
              Progress, Internet-Draft, draft-schinazi-masque-connect-
              udp-00, 16 April 2020, <http://www.ietf.org/internet-
              drafts/draft-schinazi-masque-connect-udp-00.txt>.

Acknowledgments

   This work-in-progress proposal is partly based on
   [I-D.schinazi-masque-connect-udp], and the proposal for the MASQUE
   protocol more generally.

Author's Address

   Tommy Pauly
   Apple Inc.
   One Apple Park Way
   Cupertino, California 95014,
   United States of America

   Email: tpauly@apple.com














Pauly                    Expires 2 January 2021                 [Page 9]
